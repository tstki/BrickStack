More of a todo / idea list than a roadmap, but here goes:
====
- Dont use "select *" but get the exact columns
- Add configurable behaviour for "view part" / "view set" -> "ask" / "rebrickable" / "other" / "custom"
- Configure next/prev page results, in case results are a lot. (limit 10 offset 10) or load while scrolling.
- Dark mode
- "3001pr004" and other parts with different external references does not allow part lookup at this time.
-- Should be available in the API
- Caps lock is active warning in login dialog
- Convert the older sql connections to firedac
- Add "force refresh from external" button for sets under a setlist.
- Fix printing, again.
- Note bulk downloads may be slow and need to be throttled to +- 1 per second.
- Closing a dialog should store it's last location, not just on application close

Welcome:
- Welcome message on launch
- "Welcome to BrickStack", splash screen on first load - show progress on creating base tables. (should be fast anyway)
- Mandatory download of required files / database on first load (the software is kinda useless otherwise)
- reference to tutorial/about and mandatory database creation steps and updating.

Database:
- Rename Brickstack tables to something more sensible than "my..."
- Support .gz files for database import. Can be downloaded manually and placed in import folder.
- Automate import / Bulk download:
-- https://rebrickable.com/downloads/ - option to perform a bulk download, unzip and fill a local database with this data.
- Database updater steps:
-- Start page explaining what it's for. Press Start to start.
-- Start page, show table with current versions, if available, otherwise "no database yet", press next to download and create it.
-- Find the 12 download links and show the available version. Give user option to close if version is in the last week. (auto check versions later)
-- Show download progress. File 1/12, 50%,. until 12/12 100%
-- First number is unix time
-- Once downloaded show option to create (if not exist), or wipe and update new imports using sqlite.
-- Once done show results / versions of all tables.
-- Disable buttons while loading.
-- Allow abort with cancel - but keep in mind youll have a broken database.
-- Base "myTable" stuff will need to exist before anything else.
-- Track versions in myVersions table

Optimizations:
- Multithreading http calls for smoother user experience (mind error 429)
- Implement FastMM5 for memory leak checking and object creation performance. https://github.com/pleriche/FastMM5/releases
- Inline small functions.
- More multithreading - performing the query and convert to internal values, converting internal values to display list.
- sql thread safety by connection pooling
- Configure result limitation so the user cant query the whole database with one number.
- progressdialog in case an operation takes long (like import/export)
- Cleanup unused functions to keep the .exe smaller

Images:
- Delayed image has thread issues, fix.
- Slider to control part/image size.
- Image processor - to reduce image size if no big image is needed. Rebrickable only serves one size and it's WAY bigger than needed in most cases.

Add config dialog to enter:
- Default import / export path (just remember last used)
- Option to allow multiple collections windows
- Option to allow multiple collection windows
- Check for updates / autoupdater (we dont have a webserver, so no auto updates anytime soon)

Get user's inventory
- ability to export inventory per group to rebrickable csv/xml

Configure desired columns when printing parts - preferably on the dialog itself by showing the config dialog and it's related settings.
- Also multiple columns - ask in dialog, and make a preview
- Color / grayscale - might not be needed since printer settings can arrange that.
- Look into Skia library https://github.com/skia4delphi/skia4delphi

Collection window:
- Import from CSV/Xml and other sources.
- Edit (change current selected row) -> show dialog with options such as: icon / name / description / custom fields
- Drag n drop to change custom order.
- Add warning on export type, that not all settings may be supported by the receiving party. With button for "dont show again"
- Support filtering by custom tag
- Give custom tags a user selectable icon
- Option to open selected collections in the same window, or a new window for each. (extra work for saving dialog dimensions)
- Right click or drag n drop (+shift) to move / add set to collection.
- Sub-setlists, in collections screen.
- Right click mark as built
- Add "all your sets" table entry to view your collection and filter from there.
- Remember column widths
- Add inventory version to set selection, so export knows what version to use rather than v1
- Support adding figures
- Support filtering separate figures or all figures in your sets.
- Text filter (show/hide text matches by name)

Settings:
- Add option to show/hide columns for collection.
- Add ability to add custom fields.
- Option to store backup files on changes / periodically.
- Slider setting for delay between image downloads.
- Search options box above treeview.

Windows:
- Collection
- Collection details (shows selected collection's details / custom fields / statistics)
- Collection content (shows selected collection's set content)
- Multiple collections (vertical and horizontal)
- Link to set instructions - link to rebrickable / others.
- Right mouse menu options on table
- View set on rebrickable/other links. from set details page.
- Remember checkbox mode and checks between sessions
- "layout" set for all windows to switch window placements configured by the user.
- Hamburger menu if window size is too thin.
- Expand about screen
- Fix window sizes and anchors
- Helpfile / tutorial / common shortcuts
- Choose UI elements in search results / parts (several template layouts, with example)
-- Scale options.
- Sorting tables

Export collection:
- Choose format
- Choose overwrite / keep

Export set parts:
- CSV

Import collection:
- Choose format
- Choose overwrite / keep

Logging:
- Optional log files for communication and debugging.
- Make sure passwords are not logged to the _token endpoint
- Make sure any token is not logged.

Throttling and request slowing:
- Handle error 429: Add a mandatory delay between requests
- Request was throttled - you are sending too many requests too fast.
- Normal user accounts are allowed to send on average one request/sec, with some small allowance for burst traffic.
- Example response: { "detail": "Request was throttled. Expected available in 2 seconds." }
- Parts call: /lego/parts/?part_nums=3001,3002,3003&inc_part_details=1

Search:
- Option to show search as image panels or table with text, and image on hover
- Prevent text overlap (cut off by replacing text with ..."
- Search add next results button.
- Also to future part search dialogs
- When searching for minifigs, also search "in sets"

Search parts in:
- Search for parts in sets, to find sets

Analytics:
- Show graphs of each theme / year / part count of sets you own
- Maybe some external api that we can call to get set values